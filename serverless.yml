service: ${env:BUILD_PROJECT}-github-webhook

plugins:
  - serverless-step-functions
  - serverless-parameters
  - serverless-portable-templates
  - serverless-pseudo-parameters

custom:
  stage: dev
  github-webhook:
    githubStatusContext: codebuild/${env:BUILD_PROJECT}/pr
    githubBuildEvents: pr_state
    githubBuildUsers: ""
    githubBuildComment: go codebuild go
  parameters:
    CodebuildProject:
      Type: String
      Default: ${env:BUILD_PROJECT}
      Description: Name of the build project that should be triggered
    GithubRepository:
      Type: String
      Default: ${env:GITHUB_REPOSITORY}
      Description: "Github repository url, eg: https://github.com/[username]/[repository]"
    GithubStatusContext:
      Type: String
      Default: ${env:GITHUB_STATUS_CONTEXT, self:custom.github-webhook.githubStatusContext}
      Description: A label used to differentiate this status from other status integrations
    GithubBuildEvents:
      Type: String
      Default: ${env:GITHUB_BUILD_EVENTS, self:custom.github-webhook.githubBuildEvents}
      Description: Comma-separated string of Github events that should initiate a build, supports "pr_state" or "pr_comment"
    GithubBuildUsers:
      Type: String
      Default: ${env:GITHUB_BUILD_USERS, self:custom.github-webhook.githubBuildUsers}
      Description: For pull request comments, a comma-separated string of users authorized to initiate a build
    GithubBuildComment:
      Type: String
      Default: ${env:GITHUB_BUILD_COMMENT, self:custom.github-webhook.githubBuildComment}
      Description: For pull request comments, the comment that will initiate a build
    SsmGithubUsername:
      Type: String
      Default: ${env:SSM_GITHUB_USERNAME}
      Description: Encrypted SSM parameter name containing the Github username, this is the user which will be displayed
    SsmGithubAccessToken:
      Type: String
      Default: ${env:SSM_GITHUB_ACCESS_TOKEN}
      Description: Encrypted SSM parameter name containing the generated Github access token
    SsmGithubWebhookSecret:
      Type: String
      Default: ${env:SSM_GITHUB_WEBHOOK_SECRET}
      Description: Encrypted SSM parameter name containing the secret that will be used to authenticate Github webhook events

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, self:custom.stage}
  versionFunctions: false
  memorySize: 128

  # you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - codebuild:*
      Resource: "arn:aws:codebuild:#{AWS::Region}:#{AWS::AccountId}:project/${env:BUILD_PROJECT}"
    - Effect: "Allow"
      Action:
        - ssm:GetParameter
      Resource:
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter${env:SSM_GITHUB_USERNAME}"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter${env:SSM_GITHUB_ACCESS_TOKEN}"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter${env:SSM_GITHUB_WEBHOOK_SECRET}"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/${env:SSM_GITHUB_USERNAME}"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/${env:SSM_GITHUB_ACCESS_TOKEN}"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/${env:SSM_GITHUB_WEBHOOK_SECRET}"
    - Effect: "Allow"
      Action:
        - kms:Decrypt
      Resource: "arn:aws:kms:#{AWS::Region}:#{AWS::AccountId}:key/${env:KMS_SSM_KEYID}"

  environment:
    BUILD_PROJECT:
      Ref: CodebuildProject
    GITHUB_REPOSITORY:
      Ref: GithubRepository
    GITHUB_STATUS_CONTEXT:
      Ref: GithubStatusContext
    GITHUB_BUILD_EVENTS:
      Ref: GithubBuildEvents
    GITHUB_BUILD_USERS:
      Ref: GithubBuildUsers
    GITHUB_BUILD_COMMENT:
      Ref: GithubBuildComment
    SSM_GITHUB_USERNAME:
      Ref: SsmGithubUsername
    SSM_GITHUB_ACCESS_TOKEN:
      Ref: SsmGithubAccessToken
    SSM_GITHUB_WEBHOOK_SECRET:
      Ref: SsmGithubWebhookSecret

functions:
  start-build:
    handler: handler.start_build

  check-build-status:
    handler: handler.check_build_status

  build-done:
    handler: handler.build_done

  webhook-resource:
    handler: webhook.resource

resources:
  Resources:
    GithubWebhook:
      Type: Custom::GithubWebhook
      Properties:
        ServiceToken:
          Fn::GetAtt:
            - WebhookDashresourceLambdaFunction
            - Arn
        Endpoint:
          Fn::Join:
            - ""
            -
              - https://
              - Ref: "ApiGatewayRestApi"
              - .execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}/trigger-build/

  Outputs:
    TriggerEndpoint:
      Value:
        Fn::Join:
          - ""
          -
            - https://
            - Ref: "ApiGatewayRestApi"
            - .execute-api.#{AWS::Region}.amazonaws.com/${self:provider.stage}/trigger-build/

stepFunctions:
  stateMachines:
    build-for-commit:
      events:
        - http:
            path: trigger-build
            method: POST
            cors: true
      definition:
        Comment: "Check for build status for the given build project, and mark it when done on GH"
        StartAt: start_build
        States:
          start_build:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:#{AWS::StackName}-start-build"
            Next: check_build_status
          wait_a_bit:
            Type: Wait
            Seconds: 5
            Next: check_build_status
          check_build_status:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:#{AWS::StackName}-check-build-status"
            Next: check_build_status_outcome
            Retry:
              - ErrorEquals: [ "States.TaskFailed" ]
                IntervalSeconds: 3
                MaxAttempts: 3
          check_build_status_outcome:
            Type: Choice
            Choices:
            - Variable: "$.build.buildComplete"
              BooleanEquals: true
              Next: build_done
            Default: wait_a_bit
          build_done:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:#{AWS::StackName}-build-done"
            End: true
